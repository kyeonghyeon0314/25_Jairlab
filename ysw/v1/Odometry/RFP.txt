        Odometry

helps path-planning

faster-LIO: focused on FPS(using parallel sparse iVox)
DLIO: focused on traversing uneven terrain
두 알고리즘 모두 loop-closure detection 기능 없음

마지막 bag 파일(분수대에서 drift 발생) 실행해본 결과
DLIO: 6d pose(pos, ori)도 직관적으로 터미널에 출력되고 slam 자체는 faster-lio보다 가벼움. 하지만, 분수대에서 좌회전할 때 여전히 우회전하는 drift 발생(DLIO/seq10_drift.png)
faster-LIO: odometry: 분수대에서 좌회전을 하긴 하지만(faster-LIO/seq10_drift.png), 6호관쯤 왔을 때 drift 확인 가능함. 초당 등록하는 포인트 클라우드는 DLIO보다 많아서 slam 자체는 무거움
--> mapping 및 불필요한 코드 덜어낸 후 odom 계산 성능 자체는 비교 예정(현재 faster-LIO부터 작업 중)
